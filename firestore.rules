/**
 * @fileoverview Firestore Security Rules for the application.
 *
 * Core Philosophy:
 * This ruleset enforces that only authenticated users can perform CRUD operations on categories.
 *
 * Data Structure:
 * All category data is stored in the top-level `/categories` collection.
 *
 * Key Security Decisions:
 * - Only authenticated users can create, update, or delete categories.
 * - Unauthenticated users cannot create, update, or delete categories.
 * - Listing categories is allowed for all users, including unauthenticated users.
 * - The `parentCategoryId` is not used for security rules and should be avoided.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows authenticated users to manage categories.
     * @path /categories/{categoryId}
     * @allow (create) User with UID 'hCgWSzB6SFbIi4TUmTPbWor2MYC3' creates a category.
     * @deny (create) Unauthenticated user attempts to create a category.
     * @allow (update) User with UID 'hCgWSzB6SFbIi4TUmTPbWor2MYC3' updates a category.
     * @deny (update) Unauthenticated user attempts to update a category.
     * @allow (delete) User with UID 'hCgWSzB6SFbIi4TUmTPbWor2MYC3' deletes a category.
     * @deny (delete) Unauthenticated user attempts to delete a category.
     * @allow (get) Any user can retrieve a category.
     * @allow (list) Any user can list categories.
     * @principle Enforces authentication for category management.
     */
    match /categories/{categoryId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    // --- Helper functions ---

    /**
     * @description Checks if the user is signed in.
     * @return {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}