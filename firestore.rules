/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a "public read, owner write" security model for a CMS.
 *
 * Core Philosophy:
 * All content is publicly readable by default to support the public-facing website.
 * Write operations (create, update, delete) are strictly controlled and require authentication.
 * Content creation and modification is restricted to the content's owner.
 *
 * Data Structure:
 * - /pages/{pageId}: Static pages.
 * - /categories/{categoryId}: Content categories.
 * - /tags/{tagId}: Content tags.
 * - /posts/{postId}: Blog posts.
 * - /media/{mediaId}: Uploaded media files.
 * - /site_settings/config: Global site configuration.
 * - /widget_areas/{widgetAreaId}: Definitions for theme widget areas.
 * - /widget_instances/{widgetInstanceId}: Configured widget instances.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for authentication.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the requester is the owner of an existing document.
    function isOwner(authorId) {
      return request.auth.uid == authorId;
    }

    // Default rule: All documents are publicly readable.
    // This allows the frontend website to fetch any necessary content without authentication.
    match /{document=**} {
      allow read: if true;
    }

    // --- WRITE RULE OVERRIDES ---
    // The following rules secure write access for each collection, overriding the public read default.

    // Pages: Only the author can create, update, or delete.
    match /pages/{pageId} {
      allow write: if isSignedIn() && (
        (request.resource.data.authorId == request.auth.uid) || // create/update
        (isOwner(resource.data.authorId)) // delete
      );
    }

    // Posts: Only the author can create, update, or delete.
    match /posts/{postId} {
       allow write: if isSignedIn() && (
        (request.resource.data.authorId == request.auth.uid) || // create/update
        (isOwner(resource.data.authorId)) // delete
      );
    }

    // Media: Only the author can create, update, or delete.
    match /media/{mediaId} {
       allow write: if isSignedIn() && (
        (request.resource.data.authorId == request.auth.uid) || // create/update
        (isOwner(resource.data.authorId)) // delete
      );
    }

    // Categories, Tags, Widget Areas, and Widget Instances: Any authenticated user can manage these.
    match /{collectionName}/{docId}
    where collectionName in ['categories', 'tags', 'widget_areas', 'widget_instances'] {
        allow write: if isSignedIn();
    }

    // Site Settings: Any authenticated user can modify the single config document.
    match /site_settings/config {
      allow write: if isSignedIn();
    }
  }
}
