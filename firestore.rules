
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is an admin/superuser
    function isSuperuser() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superuser';
    }

    // Helper function to check if a user is an editor or superuser
    function isEditorOrSuper() {
        return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'superuser'];
    }
    
    // Helper function to check if a user is a writer, editor, or superuser
    function isWriterOrHigher() {
        return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['writer', 'editor', 'superuser'];
    }

    // Users: Users can only read their own profile, but can update their own displayName and photoURL. Role changes only by superuser.
    match /users/{userId} {
      allow read: if true;
      allow create: if isSuperuser(); // Only superusers can create new users via dashboard
      allow update: if (request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL'])) || isSuperuser();
      allow delete: if isSuperuser();
    }

    // Posts, Pages, Categories, Tags, Media: Publicly readable, but only writable by authenticated authors/editors.
    match /{collectionName}/{docId} where collectionName in ['posts', 'pages', 'categories', 'tags', 'media'] {
      allow read: if resource.data.status == 'published' || collectionName in ['categories', 'tags', 'media'] || (isAuthenticated() && resource.data.authorId == request.auth.uid);
      allow list: if true;
      allow create: if isWriterOrHigher();
      allow update: if (isAuthenticated() && resource.data.authorId == request.auth.uid) || isEditorOrSuper();
      allow delete: if (isAuthenticated() && resource.data.authorId == request.auth.uid) || isEditorOrSuper();
    }
    
    // Site Settings: Readable by all, writable only by superusers.
    match /site_settings/config {
        allow read: if true;
        allow write: if isSuperuser();
    }

    // Subscriptions: Anyone can create a subscription. No one can read, update, or delete them from the client.
    match /subscriptions/{subscriptionId} {
      allow create: if true;
      allow read, update, delete: if false;
    }

    // Notifications: Users can only read/update their own notifications. Cannot be created or deleted from the client.
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create, delete: if false;
    }
    
    // Comments: Logged-in users can create. Can only edit/delete their own.
    match /posts/{postId}/comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
    }
    
    // Likes: Logged-in users can like/unlike.
    match /posts/{postId}/likes/{userId} {
        allow read: if true;
        allow create, delete: if isAuthenticated() && request.auth.uid == userId;
        allow update: if false;
    }

    // Page Builder & Layout Collections: Readable by all, writable only by superusers
    match /{layoutCollection}/{layoutId} where layoutCollection in ['page_layouts', 'block_layouts', 'page_sections', 'section_blocks'] {
        allow read: if true;
        allow write: if isSuperuser();
    }

    // Widget Collections: Readable by all, writable only by editors/superusers
     match /{widgetCollection}/{widgetId} where widgetCollection in ['widget_areas', 'widget_instances'] {
        allow read: if true;
        allow write: if isEditorOrSuper();
    }
    
    // Navigation Collections: Readable by all, writable only by editors/superusers
    match /{navCollection}/{navId} where navCollection in ['navigation_menus', 'navigation_menu_items'] {
        allow read: if true;
        allow write: if isEditorOrSuper();
    }

    // Custom Themes: Users can read/write their own themes.
    match /custom_themes/{themeId} {
        allow read: if true;
        allow create, update, delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
    }
  }
}
