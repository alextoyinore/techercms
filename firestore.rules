/**
 * @fileoverview Firestore Security Rules for a CMS application.
 *
 * @description
 * This ruleset follows a "public read, authenticated write" model. All content
 * is readable by any user, but creating, updating, or deleting content requires
 * authentication. Specific content types like posts and pages are further
 * restricted to their authors for write operations.
 *
 * @path /databases/{database}/documents
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }

    match /pages/{pageId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }
    
    match /media/{mediaId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isSignedIn();
    }

    match /tags/{tagId} {
      allow read: if true;
      allow write: if isSignedIn();
    }
    
    match /widget_areas/{widgetAreaId} {
      allow read: if true;
      allow write: if isSignedIn();
    }
    
    match /widget_instances/{widgetInstanceId} {
      allow read: if true;
      allow write: if isSignedIn();
    }

    match /site_settings/config {
      allow read: if true;
      allow write: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}
